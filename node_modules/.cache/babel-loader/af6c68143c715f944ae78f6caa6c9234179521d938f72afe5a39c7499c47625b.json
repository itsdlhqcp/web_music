{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91859\\\\Desktop\\\\web_music\\\\src\\\\Components\\\\Library\\\\LibraryListItem.js\";\n// LibraryListItem.js\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LibraryListItem(_ref) {\n  let {\n    song,\n    setSongState,\n    songState,\n    audioRef,\n    isNowPlaying\n  } = _ref;\n  const changeCurrentSongHandler = () => {\n    setSongState({\n      ...songState,\n      currentSong: [song],\n      isPlaying: true\n    });\n    if (audioRef.current) {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then(audio => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: changeCurrentSongHandler,\n    className: `library__list-item ${isNowPlaying ? \"now-playing\" : \"other-song\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `library__song-column ${isNowPlaying ? \"now-playing-text\" : \"other-song-text\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"library__song-title\",\n        children: song.songName || \"Unknown Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = LibraryListItem;\nexport default LibraryListItem;\nvar _c;\n$RefreshReg$(_c, \"LibraryListItem\");","map":{"version":3,"names":["React","LibraryListItem","song","setSongState","songState","audioRef","isNowPlaying","changeCurrentSongHandler","currentSong","isPlaying","current","playPromise","play","undefined","then","audio","songName"],"sources":["C:/Users/91859/Desktop/web_music/src/Components/Library/LibraryListItem.js"],"sourcesContent":["// LibraryListItem.js\r\nimport React from \"react\";\r\n\r\nfunction LibraryListItem({ song, setSongState, songState, audioRef, isNowPlaying }) {\r\n  const changeCurrentSongHandler = () => {\r\n    setSongState({\r\n      ...songState,\r\n      currentSong: [song],\r\n      isPlaying: true, \r\n    });\r\n\r\n    if (audioRef.current) {\r\n      const playPromise = audioRef.current.play();\r\n\r\n      if (playPromise !== undefined) {\r\n        playPromise.then((audio) => {\r\n          audioRef.current.play();\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={changeCurrentSongHandler}\r\n      className={`library__list-item ${isNowPlaying ? \"now-playing\" : \"other-song\"}`}\r\n    >\r\n      <div className={`library__song-column ${isNowPlaying ? \"now-playing-text\" : \"other-song-text\"}`}>\r\n        <h3 className=\"library__song-title\">{song.songName || \"Unknown Title\"}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LibraryListItem;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,eAAe,OAA4D;EAAA,IAA3D;IAAEC,IAAI;IAAEC,YAAY;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAa,CAAC;EAChF,MAAMC,wBAAwB,GAAG,MAAM;IACrCJ,YAAY,CAAC;MACX,GAAGC,SAAS;MACZI,WAAW,EAAE,CAACN,IAAI,CAAC;MACnBO,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,IAAIJ,QAAQ,CAACK,OAAO,EAAE;MACpB,MAAMC,WAAW,GAAGN,QAAQ,CAACK,OAAO,CAACE,IAAI,EAAE;MAE3C,IAAID,WAAW,KAAKE,SAAS,EAAE;QAC7BF,WAAW,CAACG,IAAI,CAAEC,KAAK,IAAK;UAC1BV,QAAQ,CAACK,OAAO,CAACE,IAAI,EAAE;QACzB,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAED,oBACE;IACE,OAAO,EAAEL,wBAAyB;IAClC,SAAS,EAAG,sBAAqBD,YAAY,GAAG,aAAa,GAAG,YAAa,EAAE;IAAA,uBAE/E;MAAK,SAAS,EAAG,wBAAuBA,YAAY,GAAG,kBAAkB,GAAG,iBAAkB,EAAE;MAAA,uBAC9F;QAAI,SAAS,EAAC,qBAAqB;QAAA,UAAEJ,IAAI,CAACc,QAAQ,IAAI;MAAe;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA;EACvE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KA7BQf,eAAe;AA+BxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}