{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91859\\\\Desktop\\\\web_music\\\\src\\\\Components\\\\Library\\\\LibraryListItem.js\";\n// LibraryListItem.js\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LibraryListItem(_ref) {\n  let {\n    song,\n    setSongState,\n    songState,\n    audioRef\n  } = _ref;\n  const changeCurrentSongHandler = () => {\n    setSongState({\n      ...songState,\n      currentSong: [song],\n      isPlaying: true // Assuming you want to start playing the new song\n    });\n\n    if (audioRef.current) {\n      const playPromise = audioRef.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then(audio => {\n          audioRef.current.play();\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: changeCurrentSongHandler,\n    className: `library__list-item ${songState && songState.currentSong && song.id === songState.currentSong[0].id ? \"active-song\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library__song-column\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"library__song-title\",\n        children: song.songName || \"Unknown Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = LibraryListItem;\nexport default LibraryListItem;\nvar _c;\n$RefreshReg$(_c, \"LibraryListItem\");","map":{"version":3,"names":["React","LibraryListItem","song","setSongState","songState","audioRef","changeCurrentSongHandler","currentSong","isPlaying","current","playPromise","play","undefined","then","audio","id","songName"],"sources":["C:/Users/91859/Desktop/web_music/src/Components/Library/LibraryListItem.js"],"sourcesContent":["// LibraryListItem.js\r\nimport React from \"react\";\r\n\r\nfunction LibraryListItem({ song, setSongState, songState, audioRef }) {\r\n  const changeCurrentSongHandler = () => {\r\n    setSongState({\r\n      ...songState,\r\n      currentSong: [song],\r\n      isPlaying: true, // Assuming you want to start playing the new song\r\n    });\r\n\r\n    if (audioRef.current) {\r\n      const playPromise = audioRef.current.play();\r\n\r\n      if (playPromise !== undefined) {\r\n        playPromise.then((audio) => {\r\n          audioRef.current.play();\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={changeCurrentSongHandler}\r\n      className={`library__list-item ${\r\n        songState &&\r\n        songState.currentSong &&\r\n        song.id === songState.currentSong[0].id\r\n          ? \"active-song\"\r\n          : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"library__song-column\">\r\n        <h3 className=\"library__song-title\">{song.songName || \"Unknown Title\"}</h3>\r\n        {/* Additional details can be displayed here */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LibraryListItem;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,eAAe,OAA8C;EAAA,IAA7C;IAAEC,IAAI;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAS,CAAC;EAClE,MAAMC,wBAAwB,GAAG,MAAM;IACrCH,YAAY,CAAC;MACX,GAAGC,SAAS;MACZG,WAAW,EAAE,CAACL,IAAI,CAAC;MACnBM,SAAS,EAAE,IAAI,CAAE;IACnB,CAAC,CAAC;;IAEF,IAAIH,QAAQ,CAACI,OAAO,EAAE;MACpB,MAAMC,WAAW,GAAGL,QAAQ,CAACI,OAAO,CAACE,IAAI,EAAE;MAE3C,IAAID,WAAW,KAAKE,SAAS,EAAE;QAC7BF,WAAW,CAACG,IAAI,CAAEC,KAAK,IAAK;UAC1BT,QAAQ,CAACI,OAAO,CAACE,IAAI,EAAE;QACzB,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAED,oBACE;IACE,OAAO,EAAEL,wBAAyB;IAClC,SAAS,EAAG,sBACVF,SAAS,IACTA,SAAS,CAACG,WAAW,IACrBL,IAAI,CAACa,EAAE,KAAKX,SAAS,CAACG,WAAW,CAAC,CAAC,CAAC,CAACQ,EAAE,GACnC,aAAa,GACb,EACL,EAAE;IAAA,uBAEH;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACnC;QAAI,SAAS,EAAC,qBAAqB;QAAA,UAAEb,IAAI,CAACc,QAAQ,IAAI;MAAe;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA;EAEvE;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KApCQf,eAAe;AAsCxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}