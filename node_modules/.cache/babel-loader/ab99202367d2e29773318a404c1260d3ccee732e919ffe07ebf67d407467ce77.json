{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91859\\\\Desktop\\\\web_music\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport { useRef, useState, useEffect } from 'react';\nimport Playlist from './PlayList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentMusicDetails, setCurrentMusicDetails] = useState({\n    songName: 'Inspired (Clean)',\n    songArtist: 'NEFFEX',\n    songSrc: './Assets/songs/Inspired (Clean) - NEFFEX.mp3',\n    songAvatar: './Assets/Images/image3.jpg'\n  });\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [audioProgress, setAudioProgress] = useState(0);\n  const [isAudioPlaying, setIsAudioPlaying] = useState(false);\n  const [musicIndex, setMusicIndex] = useState(0);\n  const [musicTotalLength, setMusicTotalLength] = useState('04:38');\n  const [musicCurrentTime, setMusicCurrentTime] = useState('00:00');\n  const [videoIndex, setVideoIndex] = useState(0);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [showPlaylist, setShowPlaylist] = useState(false);\n  const currentAudio = useRef();\n  const handleMusicProgressBar = e => {\n    setAudioProgress(e.target.value);\n    currentAudio.current.currentTime = e.target.value * currentAudio.current.duration / 100;\n  };\n  let avatarClass = ['objectFitCover', 'objectFitContain', 'none'];\n  const [avatarClassIndex, setAvatarClassIndex] = useState(0);\n  const handleAvatar = () => {\n    setAvatarClassIndex(prevIndex => (prevIndex + 1) % avatarClass.length);\n  };\n  const handleAudioPlay = () => {\n    if (currentAudio.current.paused) {\n      currentAudio.current.play();\n      setIsAudioPlaying(true);\n    } else {\n      currentAudio.current.pause();\n      setIsAudioPlaying(false);\n    }\n  };\n  const playlistKey = 'musicPlaylist';\n  const storePlaylistInStorage = playlist => {\n    localStorage.setItem(playlistKey, JSON.stringify(playlist));\n  };\n  const retrievePlaylistFromStorage = () => {\n    const storedPlaylist = localStorage.getItem(playlistKey);\n    return storedPlaylist ? JSON.parse(storedPlaylist) : [];\n  };\n  const [playlist, setPlaylist] = useState(() => retrievePlaylistFromStorage());\n  useEffect(() => {\n    if (playlist.length > 0) {\n      const firstSong = playlist[musicIndex];\n      currentAudio.current.src = firstSong.songSrc;\n      setCurrentMusicDetails({\n        songName: 'Unknown',\n        songArtist: 'Unknown',\n        songSrc: firstSong.songSrc,\n        songAvatar: './Assets/Images/image3.jpg'\n      });\n      setIsAudioPlaying(true);\n      setNowPlaying({\n        songName: firstSong.songName || 'Unknown',\n        songArtist: firstSong.songArtist || 'Unknown',\n        songSrc: firstSong.songSrc,\n        songAvatar: './Assets/Images/image3.jpg'\n      });\n    }\n  }, [playlist, musicIndex]);\n  useEffect(() => {\n    // Save current state to local storage\n    localStorage.setItem('musicIndex', musicIndex);\n    localStorage.setItem('audioProgress', audioProgress);\n    localStorage.setItem('isAudioPlaying', isAudioPlaying);\n  }, [musicIndex, audioProgress, isAudioPlaying]);\n  useEffect(() => {\n    // Retrieve saved state from local storage\n    const savedMusicIndex = parseInt(localStorage.getItem('musicIndex'), 10) || 0;\n    const savedAudioProgress = parseFloat(localStorage.getItem('audioProgress')) || 0;\n    const savedIsAudioPlaying = localStorage.getItem('isAudioPlaying') === 'true';\n\n    // Set the player to the saved state\n    setMusicIndex(savedMusicIndex);\n    setAudioProgress(savedAudioProgress);\n    setIsAudioPlaying(savedIsAudioPlaying);\n  }, []);\n  const handleNextSong = () => {\n    if (musicIndex < playlist.length - 1) {\n      setMusicIndex(prevIndex => prevIndex + 1);\n      setIsAudioPlaying(true);\n    } else {\n      setMusicIndex(0);\n      setIsAudioPlaying(false);\n    }\n  };\n  const handlePrevSong = () => {\n    if (musicIndex === 0) {\n      setMusicIndex(playlist.length - 1);\n    } else {\n      setMusicIndex(prevIndex => prevIndex - 1);\n    }\n  };\n  const handleAudioUpdate = () => {\n    let minutes = Math.floor(currentAudio.current.duration / 60);\n    let seconds = Math.floor(currentAudio.current.duration % 60);\n    let musicTotalLength0 = `${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\n    setMusicTotalLength(musicTotalLength0);\n    let currentMin = Math.floor(currentAudio.current.currentTime / 60);\n    let currentSec = Math.floor(currentAudio.current.currentTime % 60);\n    let musicCurrentT = `${currentMin < 10 ? `0${currentMin}` : currentMin}:${currentSec < 10 ? `0${currentSec}` : currentSec}`;\n    setMusicCurrentTime(musicCurrentT);\n    const progress = parseInt(currentAudio.current.currentTime / currentAudio.current.duration * 100);\n    setAudioProgress(isNaN(progress) ? 0 : progress);\n  };\n  const vidArray = ['./Assets/Videos/video1.mp4', './Assets/Videos/video2.mp4', './Assets/Videos/video3.mp4', './Assets/Videos/video4.mp4', './Assets/Videos/video5.mp4', './Assets/Videos/video6.mp4'];\n  const handleChangeBackground = () => {\n    if (videoIndex >= vidArray.length - 1) {\n      setVideoIndex(0);\n    } else {\n      setVideoIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  const truncatedSongName = nowPlaying.songName ? nowPlaying.songName.substring(0, nowPlaying.songName.length - 4).substring(0, 24) : \"Let's goo song\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        src: currentMusicDetails.songSrc,\n        ref: currentAudio,\n        onEnded: handleNextSong,\n        onTimeUpdate: handleAudioUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        src: vidArray[videoIndex],\n        loop: true,\n        muted: true,\n        autoPlay: true,\n        className: \"backgroundVideo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blackScreen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-Container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"musicPlayer\",\n          children: \"Music Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"music-Head-Name\",\n          children: truncatedSongName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"music-Artist-Name\",\n          children: nowPlaying.songArtist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentMusicDetails.songAvatar,\n          className: avatarClass[avatarClassIndex],\n          onClick: handleAvatar,\n          alt: \"song Avatar\",\n          id: \"songAvatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"musicTimerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"musicCurrentTime\",\n            children: musicCurrentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"musicTotalLenght\",\n            children: musicTotalLength\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"musicProgressBar\",\n          className: \"musicProgressBar\",\n          value: audioProgress,\n          onChange: handleMusicProgressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"musicControlers\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-backward musicControler\",\n            onClick: handlePrevSong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa-solid ${isAudioPlaying ? 'fa-pause-circle' : 'fa-circle-play'} playBtn`,\n            onClick: handleAudioPlay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-forward musicControler\",\n            onClick: handleNextSong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".mp3\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFileUpload,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPlaylist(!showPlaylist),\n          children: showPlaylist ? 'Hide Playlist' : 'Show Playlist'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), showPlaylist && /*#__PURE__*/_jsxDEV(Playlist, {\n          playlist: playlist,\n          setMusicIndex: setMusicIndex,\n          currentAudio: currentAudio,\n          isAudioPlaying: isAudioPlaying,\n          setSongState: setCurrentMusicDetails,\n          showPlaylist: showPlaylist,\n          setShowPlaylist: setShowPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changeBackBtn\",\n        onClick: handleChangeBackground,\n        children: \"Change Background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"7lKyMdcFBrbKay1ku2da86Vx4jQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","useEffect","Playlist","App","currentMusicDetails","setCurrentMusicDetails","songName","songArtist","songSrc","songAvatar","nowPlaying","setNowPlaying","audioProgress","setAudioProgress","isAudioPlaying","setIsAudioPlaying","musicIndex","setMusicIndex","musicTotalLength","setMusicTotalLength","musicCurrentTime","setMusicCurrentTime","videoIndex","setVideoIndex","selectedFile","setSelectedFile","showPlaylist","setShowPlaylist","currentAudio","handleMusicProgressBar","e","target","value","current","currentTime","duration","avatarClass","avatarClassIndex","setAvatarClassIndex","handleAvatar","prevIndex","length","handleAudioPlay","paused","play","pause","playlistKey","storePlaylistInStorage","playlist","localStorage","setItem","JSON","stringify","retrievePlaylistFromStorage","storedPlaylist","getItem","parse","setPlaylist","firstSong","src","savedMusicIndex","parseInt","savedAudioProgress","parseFloat","savedIsAudioPlaying","handleNextSong","handlePrevSong","handleAudioUpdate","minutes","Math","floor","seconds","musicTotalLength0","currentMin","currentSec","musicCurrentT","progress","isNaN","vidArray","handleChangeBackground","truncatedSongName","substring","handleFileChange","handleFileUpload"],"sources":["C:/Users/91859/Desktop/web_music/src/App.js"],"sourcesContent":["// App.js\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport Playlist from './PlayList';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [currentMusicDetails, setCurrentMusicDetails] = useState({\r\n    songName: 'Inspired (Clean)',\r\n    songArtist: 'NEFFEX',\r\n    songSrc: './Assets/songs/Inspired (Clean) - NEFFEX.mp3',\r\n    songAvatar: './Assets/Images/image3.jpg',\r\n  });\r\n\r\n  const [nowPlaying, setNowPlaying] = useState({});\r\n  const [audioProgress, setAudioProgress] = useState(0);\r\n  const [isAudioPlaying, setIsAudioPlaying] = useState(false);\r\n  const [musicIndex, setMusicIndex] = useState(0);\r\n  const [musicTotalLength, setMusicTotalLength] = useState('04:38');\r\n  const [musicCurrentTime, setMusicCurrentTime] = useState('00:00');\r\n  const [videoIndex, setVideoIndex] = useState(0);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [showPlaylist, setShowPlaylist] = useState(false);\r\n\r\n  const currentAudio = useRef();\r\n\r\n  const handleMusicProgressBar = (e) => {\r\n    setAudioProgress(e.target.value);\r\n    currentAudio.current.currentTime = (e.target.value * currentAudio.current.duration) / 100;\r\n  };\r\n\r\n  let avatarClass = ['objectFitCover', 'objectFitContain', 'none'];\r\n  const [avatarClassIndex, setAvatarClassIndex] = useState(0);\r\n\r\n  const handleAvatar = () => {\r\n    setAvatarClassIndex((prevIndex) => (prevIndex + 1) % avatarClass.length);\r\n  };\r\n\r\n  const handleAudioPlay = () => {\r\n    if (currentAudio.current.paused) {\r\n      currentAudio.current.play();\r\n      setIsAudioPlaying(true);\r\n    } else {\r\n      currentAudio.current.pause();\r\n      setIsAudioPlaying(false);\r\n    }\r\n  };\r\n\r\n  const playlistKey = 'musicPlaylist';\r\n\r\n  const storePlaylistInStorage = (playlist) => {\r\n    localStorage.setItem(playlistKey, JSON.stringify(playlist));\r\n  };\r\n\r\n  const retrievePlaylistFromStorage = () => {\r\n    const storedPlaylist = localStorage.getItem(playlistKey);\r\n    return storedPlaylist ? JSON.parse(storedPlaylist) : [];\r\n  };\r\n\r\n  const [playlist, setPlaylist] = useState(() => retrievePlaylistFromStorage());\r\n\r\n  useEffect(() => {\r\n    if (playlist.length > 0) {\r\n      const firstSong = playlist[musicIndex];\r\n      currentAudio.current.src = firstSong.songSrc;\r\n      setCurrentMusicDetails({\r\n        songName: 'Unknown',\r\n        songArtist: 'Unknown',\r\n        songSrc: firstSong.songSrc,\r\n        songAvatar: './Assets/Images/image3.jpg',\r\n      });\r\n      setIsAudioPlaying(true);\r\n\r\n      setNowPlaying({\r\n        songName: firstSong.songName || 'Unknown',\r\n        songArtist: firstSong.songArtist || 'Unknown',\r\n        songSrc: firstSong.songSrc,\r\n        songAvatar: './Assets/Images/image3.jpg',\r\n      });\r\n    }\r\n  }, [playlist, musicIndex]);\r\n\r\n  useEffect(() => {\r\n    // Save current state to local storage\r\n    localStorage.setItem('musicIndex', musicIndex);\r\n    localStorage.setItem('audioProgress', audioProgress);\r\n    localStorage.setItem('isAudioPlaying', isAudioPlaying);\r\n  }, [musicIndex, audioProgress, isAudioPlaying]);\r\n\r\n  useEffect(() => {\r\n    // Retrieve saved state from local storage\r\n    const savedMusicIndex = parseInt(localStorage.getItem('musicIndex'), 10) || 0;\r\n    const savedAudioProgress = parseFloat(localStorage.getItem('audioProgress')) || 0;\r\n    const savedIsAudioPlaying = localStorage.getItem('isAudioPlaying') === 'true';\r\n\r\n    // Set the player to the saved state\r\n    setMusicIndex(savedMusicIndex);\r\n    setAudioProgress(savedAudioProgress);\r\n    setIsAudioPlaying(savedIsAudioPlaying);\r\n  }, []);\r\n\r\n  const handleNextSong = () => {\r\n    if (musicIndex < playlist.length - 1) {\r\n      setMusicIndex((prevIndex) => prevIndex + 1);\r\n      setIsAudioPlaying(true);\r\n    } else {\r\n      setMusicIndex(0);\r\n      setIsAudioPlaying(false);\r\n    }\r\n  };\r\n\r\n  const handlePrevSong = () => {\r\n    if (musicIndex === 0) {\r\n      setMusicIndex(playlist.length - 1);\r\n    } else {\r\n      setMusicIndex((prevIndex) => prevIndex - 1);\r\n    }\r\n  };\r\n\r\n  const handleAudioUpdate = () => {\r\n    let minutes = Math.floor(currentAudio.current.duration / 60);\r\n    let seconds = Math.floor(currentAudio.current.duration % 60);\r\n    let musicTotalLength0 = `${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n    setMusicTotalLength(musicTotalLength0);\r\n\r\n    let currentMin = Math.floor(currentAudio.current.currentTime / 60);\r\n    let currentSec = Math.floor(currentAudio.current.currentTime % 60);\r\n    let musicCurrentT = `${currentMin < 10 ? `0${currentMin}` : currentMin}:${currentSec < 10 ? `0${currentSec}` : currentSec}`;\r\n    setMusicCurrentTime(musicCurrentT);\r\n\r\n    const progress = parseInt((currentAudio.current.currentTime / currentAudio.current.duration) * 100);\r\n    setAudioProgress(isNaN(progress) ? 0 : progress);\r\n  };\r\n\r\n  const vidArray = ['./Assets/Videos/video1.mp4', './Assets/Videos/video2.mp4', './Assets/Videos/video3.mp4', './Assets/Videos/video4.mp4', './Assets/Videos/video5.mp4', './Assets/Videos/video6.mp4'];\r\n\r\n  const handleChangeBackground = () => {\r\n    if (videoIndex >= vidArray.length - 1) {\r\n      setVideoIndex(0);\r\n    } else {\r\n      setVideoIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n  };\r\n\r\n  const truncatedSongName = nowPlaying.songName\r\n    ? nowPlaying.songName.substring(0, nowPlaying.songName.length - 4).substring(0, 24)\r\n    : \"Let's goo song\";\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <audio src={currentMusicDetails.songSrc} ref={currentAudio} onEnded={handleNextSong} onTimeUpdate={handleAudioUpdate}></audio>\r\n        <video src={vidArray[videoIndex]} loop muted autoPlay className=\"backgroundVideo\"></video>\r\n        <div className=\"blackScreen\"></div>\r\n        <div className=\"music-Container\">\r\n          <p className=\"musicPlayer\">Music Player</p>\r\n          <p className=\"music-Head-Name\">{truncatedSongName}</p>\r\n          <p className=\"music-Artist-Name\">{nowPlaying.songArtist}</p>\r\n          <img src={currentMusicDetails.songAvatar} className={avatarClass[avatarClassIndex]} onClick={handleAvatar} alt=\"song Avatar\" id=\"songAvatar\" />\r\n          <div className=\"musicTimerDiv\">\r\n            <p className=\"musicCurrentTime\">{musicCurrentTime}</p>\r\n            <p className=\"musicTotalLenght\">{musicTotalLength}</p>\r\n          </div>\r\n          <input type=\"range\" name=\"musicProgressBar\" className=\"musicProgressBar\" value={audioProgress} onChange={handleMusicProgressBar} />\r\n\r\n          <div className=\"musicControlers\">\r\n            <i className=\"fa-solid fa-backward musicControler\" onClick={handlePrevSong}></i>\r\n            <i className={`fa-solid ${isAudioPlaying ? 'fa-pause-circle' : 'fa-circle-play'} playBtn`} onClick={handleAudioPlay}></i>\r\n            <i className=\"fa-solid fa-forward musicControler\" onClick={handleNextSong}></i>\r\n            <input type=\"file\" accept=\".mp3\" onChange={handleFileChange} />\r\n            <button onClick={handleFileUpload}>Upload</button>\r\n          </div>\r\n\r\n          <button onClick={() => setShowPlaylist(!showPlaylist)}>\r\n            {showPlaylist ? 'Hide Playlist' : 'Show Playlist'}\r\n          </button>\r\n\r\n          {showPlaylist && (\r\n            <Playlist\r\n              playlist={playlist}\r\n              setMusicIndex={setMusicIndex}\r\n              currentAudio={currentAudio}\r\n              isAudioPlaying={isAudioPlaying}\r\n              setSongState={setCurrentMusicDetails}\r\n              showPlaylist={showPlaylist}\r\n              setShowPlaylist={setShowPlaylist}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"changeBackBtn\" onClick={handleChangeBackground}>\r\n          Change Background\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}