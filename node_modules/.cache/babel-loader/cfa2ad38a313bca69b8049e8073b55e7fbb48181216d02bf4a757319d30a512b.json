{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91859\\\\Desktop\\\\web_music\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport { useRef, useState, useEffect } from 'react';\nimport Playlist from './PlayList'; // Import the Playlist component\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentMusicDetails, setCurrentMusicDetails] = useState({\n    songName: 'Inspired (Clean)',\n    songArtist: 'NEFFEX',\n    songSrc: './Assets/songs/Inspired (Clean) - NEFFEX.mp3',\n    songAvatar: './Assets/Images/image3.jpg'\n  });\n  const [audioProgress, setAudioProgress] = useState(0);\n  const [isAudioPlaying, setIsAudioPlaying] = useState(false);\n  const [musicIndex, setMusicIndex] = useState(0);\n  const [musicTotalLength, setMusicTotalLength] = useState('04:38');\n  const [musicCurrentTime, setMusicCurrentTime] = useState('00:00');\n  const [videoIndex, setVideoIndex] = useState(0);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [showPlaylist, setShowPlaylist] = useState(false); // State to manage playlist visibility\n\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleFileUpload = () => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const audioSrc = reader.result;\n        const newPlaylist = [...playlist, {\n          songSrc: audioSrc\n        }];\n        setPlaylist(newPlaylist);\n        storePlaylistInStorage(newPlaylist);\n      };\n      reader.readAsDataURL(selectedFile);\n    } else {\n      alert('Please select a file to upload.');\n    }\n  };\n  const currentAudio = useRef();\n  const handleMusicProgressBar = e => {\n    setAudioProgress(e.target.value);\n    currentAudio.current.currentTime = e.target.value * currentAudio.current.duration / 100;\n  };\n  let avatarClass = ['objectFitCover', 'objectFitContain', 'none'];\n  const [avatarClassIndex, setAvatarClassIndex] = useState(0);\n  const handleAvatar = () => {\n    if (avatarClassIndex >= avatarClass.length - 1) {\n      setAvatarClassIndex(0);\n    } else {\n      setAvatarClassIndex(avatarClassIndex + 1);\n    }\n  };\n  const handleAudioPlay = () => {\n    if (currentAudio.current.paused) {\n      currentAudio.current.play();\n      setIsAudioPlaying(true);\n    } else {\n      currentAudio.current.pause();\n      setIsAudioPlaying(false);\n    }\n  };\n  const playlistKey = 'musicPlaylist';\n  const storePlaylistInStorage = playlist => {\n    localStorage.setItem(playlistKey, JSON.stringify(playlist));\n  };\n  const retrievePlaylistFromStorage = () => {\n    const storedPlaylist = localStorage.getItem(playlistKey);\n    return storedPlaylist ? JSON.parse(storedPlaylist) : [];\n  };\n  const [playlist, setPlaylist] = useState(() => retrievePlaylistFromStorage());\n  useEffect(() => {\n    if (playlist.length > 0) {\n      const firstSong = playlist[musicIndex];\n      currentAudio.current.src = firstSong.songSrc;\n      setCurrentMusicDetails({\n        songName: 'Unknown',\n        songArtist: 'Unknown',\n        songSrc: firstSong.songSrc,\n        songAvatar: './Assets/Images/image3.jpg'\n      });\n      setIsAudioPlaying(true);\n    }\n  }, [playlist, musicIndex]);\n  const handleNextSong = () => {\n    if (musicIndex >= playlist.length - 1) {\n      setMusicIndex(0);\n    } else {\n      setMusicIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  const handlePrevSong = () => {\n    if (musicIndex === 0) {\n      setMusicIndex(playlist.length - 1);\n    } else {\n      setMusicIndex(prevIndex => prevIndex - 1);\n    }\n  };\n  const handleAudioUpdate = () => {\n    let minutes = Math.floor(currentAudio.current.duration / 60);\n    let seconds = Math.floor(currentAudio.current.duration % 60);\n    let musicTotalLength0 = `${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\n    setMusicTotalLength(musicTotalLength0);\n    let currentMin = Math.floor(currentAudio.current.currentTime / 60);\n    let currentSec = Math.floor(currentAudio.current.currentTime % 60);\n    let musicCurrentT = `${currentMin < 10 ? `0${currentMin}` : currentMin}:${currentSec < 10 ? `0${currentSec}` : currentSec}`;\n    setMusicCurrentTime(musicCurrentT);\n    const progress = parseInt(currentAudio.current.currentTime / currentAudio.current.duration * 100);\n    setAudioProgress(isNaN(progress) ? 0 : progress);\n  };\n  const vidArray = ['./Assets/Videos/video1.mp4', './Assets/Videos/video2.mp4', './Assets/Videos/video3.mp4', './Assets/Videos/video4.mp4', './Assets/Videos/video5.mp4', './Assets/Videos/video6.mp4'];\n  const handleChangeBackground = () => {\n    if (videoIndex >= vidArray.length - 1) {\n      setVideoIndex(0);\n    } else {\n      setVideoIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        src: currentMusicDetails.songSrc,\n        ref: currentAudio,\n        onEnded: handleNextSong,\n        onTimeUpdate: handleAudioUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        src: vidArray[videoIndex],\n        loop: true,\n        muted: true,\n        autoPlay: true,\n        className: \"backgroundVideo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blackScreen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-Container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"musicPlayer\",\n          children: \"Music Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"music-Head-Name\",\n          children: currentMusicDetails.songName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"music-Artist-Name\",\n          children: currentMusicDetails.songArtist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentMusicDetails.songAvatar,\n          className: avatarClass[avatarClassIndex],\n          onClick: handleAvatar,\n          alt: \"song Avatar\",\n          id: \"songAvatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"musicTimerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"musicCurrentTime\",\n            children: musicCurrentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"musicTotalLenght\",\n            children: musicTotalLength\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"musicProgressBar\",\n          className: \"musicProgressBar\",\n          value: audioProgress,\n          onChange: handleMusicProgressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"musicControlers\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-backward musicControler\",\n            onClick: handlePrevSong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa-solid ${isAudioPlaying ? 'fa-pause-circle' : 'fa-circle-play'} playBtn`,\n            onClick: handleAudioPlay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-forward musicControler\",\n            onClick: handleNextSong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".mp3\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFileUpload,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPlaylist(!showPlaylist),\n          children: showPlaylist ? 'Hide Playlist' : 'Show Playlist'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), showPlaylist && /*#__PURE__*/_jsxDEV(Playlist, {\n          playlist: playlist,\n          setMusicIndex: setMusicIndex,\n          currentAudio: currentAudio,\n          isAudioPlaying: isAudioPlaying,\n          setSongState: setCurrentMusicDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changeBackBtn\",\n        onClick: handleChangeBackground,\n        children: \"Change Background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"13xr+v4vqoyQNZAAQ0cs4R7c0P0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","useEffect","Playlist","App","currentMusicDetails","setCurrentMusicDetails","songName","songArtist","songSrc","songAvatar","audioProgress","setAudioProgress","isAudioPlaying","setIsAudioPlaying","musicIndex","setMusicIndex","musicTotalLength","setMusicTotalLength","musicCurrentTime","setMusicCurrentTime","videoIndex","setVideoIndex","selectedFile","setSelectedFile","showPlaylist","setShowPlaylist","handleFileChange","e","target","files","handleFileUpload","reader","FileReader","onloadend","audioSrc","result","newPlaylist","playlist","setPlaylist","storePlaylistInStorage","readAsDataURL","alert","currentAudio","handleMusicProgressBar","value","current","currentTime","duration","avatarClass","avatarClassIndex","setAvatarClassIndex","handleAvatar","length","handleAudioPlay","paused","play","pause","playlistKey","localStorage","setItem","JSON","stringify","retrievePlaylistFromStorage","storedPlaylist","getItem","parse","firstSong","src","handleNextSong","prevIndex","handlePrevSong","handleAudioUpdate","minutes","Math","floor","seconds","musicTotalLength0","currentMin","currentSec","musicCurrentT","progress","parseInt","isNaN","vidArray","handleChangeBackground"],"sources":["C:/Users/91859/Desktop/web_music/src/App.js"],"sourcesContent":["// App.js\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport Playlist from './PlayList';  // Import the Playlist component\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [currentMusicDetails, setCurrentMusicDetails] = useState({\r\n    songName: 'Inspired (Clean)',\r\n    songArtist: 'NEFFEX',\r\n    songSrc: './Assets/songs/Inspired (Clean) - NEFFEX.mp3',\r\n    songAvatar: './Assets/Images/image3.jpg',\r\n  });\r\n\r\n  \r\n  const [audioProgress, setAudioProgress] = useState(0);\r\n  const [isAudioPlaying, setIsAudioPlaying] = useState(false);\r\n  const [musicIndex, setMusicIndex] = useState(0);\r\n  const [musicTotalLength, setMusicTotalLength] = useState('04:38');\r\n  const [musicCurrentTime, setMusicCurrentTime] = useState('00:00');\r\n  const [videoIndex, setVideoIndex] = useState(0);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [showPlaylist, setShowPlaylist] = useState(false);  // State to manage playlist visibility\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const audioSrc = reader.result;\r\n        const newPlaylist = [...playlist, { songSrc: audioSrc }];\r\n        setPlaylist(newPlaylist);\r\n        storePlaylistInStorage(newPlaylist);\r\n      };\r\n      reader.readAsDataURL(selectedFile);\r\n    } else {\r\n      alert('Please select a file to upload.');\r\n    }\r\n  };\r\n\r\n  const currentAudio = useRef();\r\n\r\n  const handleMusicProgressBar = (e) => {\r\n    setAudioProgress(e.target.value);\r\n    currentAudio.current.currentTime = (e.target.value * currentAudio.current.duration) / 100;\r\n  };\r\n\r\n  let avatarClass = ['objectFitCover', 'objectFitContain', 'none'];\r\n  const [avatarClassIndex, setAvatarClassIndex] = useState(0);\r\n\r\n  const handleAvatar = () => {\r\n    if (avatarClassIndex >= avatarClass.length - 1) {\r\n      setAvatarClassIndex(0);\r\n    } else {\r\n      setAvatarClassIndex(avatarClassIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handleAudioPlay = () => {\r\n    if (currentAudio.current.paused) {\r\n      currentAudio.current.play();\r\n      setIsAudioPlaying(true);\r\n    } else {\r\n      currentAudio.current.pause();\r\n      setIsAudioPlaying(false);\r\n    }\r\n  };\r\n\r\n  const playlistKey = 'musicPlaylist';\r\n\r\n  const storePlaylistInStorage = (playlist) => {\r\n    localStorage.setItem(playlistKey, JSON.stringify(playlist));\r\n  };\r\n\r\n  const retrievePlaylistFromStorage = () => {\r\n    const storedPlaylist = localStorage.getItem(playlistKey);\r\n    return storedPlaylist ? JSON.parse(storedPlaylist) : [];\r\n  };\r\n\r\n  const [playlist, setPlaylist] = useState(() => retrievePlaylistFromStorage());\r\n\r\n  useEffect(() => {\r\n    if (playlist.length > 0) {\r\n      const firstSong = playlist[musicIndex];\r\n      currentAudio.current.src = firstSong.songSrc;\r\n      setCurrentMusicDetails({\r\n        songName: 'Unknown',\r\n        songArtist: 'Unknown',\r\n        songSrc: firstSong.songSrc,\r\n        songAvatar: './Assets/Images/image3.jpg',\r\n      });\r\n      setIsAudioPlaying(true);\r\n    }\r\n  }, [playlist, musicIndex]);\r\n\r\n  const handleNextSong = () => {\r\n    if (musicIndex >= playlist.length - 1) {\r\n      setMusicIndex(0);\r\n    } else {\r\n      setMusicIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevSong = () => {\r\n    if (musicIndex === 0) {\r\n      setMusicIndex(playlist.length - 1);\r\n    } else {\r\n      setMusicIndex((prevIndex) => prevIndex - 1);\r\n    }\r\n  };\r\n\r\n  const handleAudioUpdate = () => {\r\n    let minutes = Math.floor(currentAudio.current.duration / 60);\r\n    let seconds = Math.floor(currentAudio.current.duration % 60);\r\n    let musicTotalLength0 = `${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n    setMusicTotalLength(musicTotalLength0);\r\n\r\n    let currentMin = Math.floor(currentAudio.current.currentTime / 60);\r\n    let currentSec = Math.floor(currentAudio.current.currentTime % 60);\r\n    let musicCurrentT = `${currentMin < 10 ? `0${currentMin}` : currentMin}:${currentSec < 10 ? `0${currentSec}` : currentSec}`;\r\n    setMusicCurrentTime(musicCurrentT);\r\n\r\n    const progress = parseInt((currentAudio.current.currentTime / currentAudio.current.duration) * 100);\r\n    setAudioProgress(isNaN(progress) ? 0 : progress);\r\n  };\r\n\r\n  const vidArray = ['./Assets/Videos/video1.mp4', './Assets/Videos/video2.mp4', './Assets/Videos/video3.mp4', './Assets/Videos/video4.mp4', './Assets/Videos/video5.mp4', './Assets/Videos/video6.mp4'];\r\n\r\n  const handleChangeBackground = () => {\r\n    if (videoIndex >= vidArray.length - 1) {\r\n      setVideoIndex(0);\r\n    } else {\r\n      setVideoIndex((prevIndex) => prevIndex + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <audio src={currentMusicDetails.songSrc} ref={currentAudio} onEnded={handleNextSong} onTimeUpdate={handleAudioUpdate}></audio>\r\n        <video src={vidArray[videoIndex]} loop muted autoPlay className=\"backgroundVideo\"></video>\r\n        <div className=\"blackScreen\"></div>\r\n        <div className=\"music-Container\">\r\n          <p className=\"musicPlayer\">Music Player</p>\r\n          <p className=\"music-Head-Name\">{currentMusicDetails.songName}</p>\r\n          <p className=\"music-Artist-Name\">{currentMusicDetails.songArtist}</p>\r\n          <img src={currentMusicDetails.songAvatar} className={avatarClass[avatarClassIndex]} onClick={handleAvatar} alt=\"song Avatar\" id=\"songAvatar\" />\r\n          <div className=\"musicTimerDiv\">\r\n            <p className=\"musicCurrentTime\">{musicCurrentTime}</p>\r\n            <p className=\"musicTotalLenght\">{musicTotalLength}</p>\r\n          </div>\r\n          <input type=\"range\" name=\"musicProgressBar\" className=\"musicProgressBar\" value={audioProgress} onChange={handleMusicProgressBar} />\r\n          \r\n          <div className=\"musicControlers\">\r\n            <i className=\"fa-solid fa-backward musicControler\" onClick={handlePrevSong}></i>\r\n            <i className={`fa-solid ${isAudioPlaying ? 'fa-pause-circle' : 'fa-circle-play'} playBtn`} onClick={handleAudioPlay}></i>\r\n            <i className=\"fa-solid fa-forward musicControler\" onClick={handleNextSong}></i>\r\n            <input type=\"file\" accept=\".mp3\" onChange={handleFileChange} />\r\n            <button onClick={handleFileUpload}>Upload</button>\r\n          </div>\r\n\r\n          {/* Show Playlist Button */}\r\n          <button onClick={() => setShowPlaylist(!showPlaylist)}>\r\n            {showPlaylist ? 'Hide Playlist' : 'Show Playlist'}\r\n          </button>\r\n\r\n          {/* Playlist Component */}\r\n          {showPlaylist && (\r\n            <Playlist\r\n              playlist={playlist}\r\n              setMusicIndex={setMusicIndex}\r\n              currentAudio={currentAudio}\r\n              isAudioPlaying={isAudioPlaying}\r\n              setSongState={setCurrentMusicDetails}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"changeBackBtn\" onClick={handleChangeBackground}>\r\n          Change Background\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAE;AACpC,OAAO,WAAW;AAAC;AAAA;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGL,QAAQ,CAAC;IAC7DM,QAAQ,EAAE,kBAAkB;IAC5BC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,8CAA8C;IACvDC,UAAU,EAAE;EACd,CAAC,CAAC;EAGF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACgB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,OAAO,CAAC;EACjE,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,OAAO,CAAC;EACjE,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;;EAE1D,MAAM0B,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,eAAe,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAM;IAC7B,IAAIR,YAAY,EAAE;MAChB,MAAMS,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvB,MAAMC,QAAQ,GAAGH,MAAM,CAACI,MAAM;QAC9B,MAAMC,WAAW,GAAG,CAAC,GAAGC,QAAQ,EAAE;UAAE7B,OAAO,EAAE0B;QAAS,CAAC,CAAC;QACxDI,WAAW,CAACF,WAAW,CAAC;QACxBG,sBAAsB,CAACH,WAAW,CAAC;MACrC,CAAC;MACDL,MAAM,CAACS,aAAa,CAAClB,YAAY,CAAC;IACpC,CAAC,MAAM;MACLmB,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,MAAMC,YAAY,GAAG3C,MAAM,EAAE;EAE7B,MAAM4C,sBAAsB,GAAIhB,CAAC,IAAK;IACpChB,gBAAgB,CAACgB,CAAC,CAACC,MAAM,CAACgB,KAAK,CAAC;IAChCF,YAAY,CAACG,OAAO,CAACC,WAAW,GAAInB,CAAC,CAACC,MAAM,CAACgB,KAAK,GAAGF,YAAY,CAACG,OAAO,CAACE,QAAQ,GAAI,GAAG;EAC3F,CAAC;EAED,IAAIC,WAAW,GAAG,CAAC,gBAAgB,EAAE,kBAAkB,EAAE,MAAM,CAAC;EAChE,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlD,QAAQ,CAAC,CAAC,CAAC;EAE3D,MAAMmD,YAAY,GAAG,MAAM;IACzB,IAAIF,gBAAgB,IAAID,WAAW,CAACI,MAAM,GAAG,CAAC,EAAE;MAC9CF,mBAAmB,CAAC,CAAC,CAAC;IACxB,CAAC,MAAM;MACLA,mBAAmB,CAACD,gBAAgB,GAAG,CAAC,CAAC;IAC3C;EACF,CAAC;EAED,MAAMI,eAAe,GAAG,MAAM;IAC5B,IAAIX,YAAY,CAACG,OAAO,CAACS,MAAM,EAAE;MAC/BZ,YAAY,CAACG,OAAO,CAACU,IAAI,EAAE;MAC3B1C,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,MAAM;MACL6B,YAAY,CAACG,OAAO,CAACW,KAAK,EAAE;MAC5B3C,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;EAED,MAAM4C,WAAW,GAAG,eAAe;EAEnC,MAAMlB,sBAAsB,GAAIF,QAAQ,IAAK;IAC3CqB,YAAY,CAACC,OAAO,CAACF,WAAW,EAAEG,IAAI,CAACC,SAAS,CAACxB,QAAQ,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMyB,2BAA2B,GAAG,MAAM;IACxC,MAAMC,cAAc,GAAGL,YAAY,CAACM,OAAO,CAACP,WAAW,CAAC;IACxD,OAAOM,cAAc,GAAGH,IAAI,CAACK,KAAK,CAACF,cAAc,CAAC,GAAG,EAAE;EACzD,CAAC;EAED,MAAM,CAAC1B,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,MAAM8D,2BAA2B,EAAE,CAAC;EAE7E7D,SAAS,CAAC,MAAM;IACd,IAAIoC,QAAQ,CAACe,MAAM,GAAG,CAAC,EAAE;MACvB,MAAMc,SAAS,GAAG7B,QAAQ,CAACvB,UAAU,CAAC;MACtC4B,YAAY,CAACG,OAAO,CAACsB,GAAG,GAAGD,SAAS,CAAC1D,OAAO;MAC5CH,sBAAsB,CAAC;QACrBC,QAAQ,EAAE,SAAS;QACnBC,UAAU,EAAE,SAAS;QACrBC,OAAO,EAAE0D,SAAS,CAAC1D,OAAO;QAC1BC,UAAU,EAAE;MACd,CAAC,CAAC;MACFI,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC,EAAE,CAACwB,QAAQ,EAAEvB,UAAU,CAAC,CAAC;EAE1B,MAAMsD,cAAc,GAAG,MAAM;IAC3B,IAAItD,UAAU,IAAIuB,QAAQ,CAACe,MAAM,GAAG,CAAC,EAAE;MACrCrC,aAAa,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM;MACLA,aAAa,CAAEsD,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,MAAMC,cAAc,GAAG,MAAM;IAC3B,IAAIxD,UAAU,KAAK,CAAC,EAAE;MACpBC,aAAa,CAACsB,QAAQ,CAACe,MAAM,GAAG,CAAC,CAAC;IACpC,CAAC,MAAM;MACLrC,aAAa,CAAEsD,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAM;IAC9B,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAChC,YAAY,CAACG,OAAO,CAACE,QAAQ,GAAG,EAAE,CAAC;IAC5D,IAAI4B,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAChC,YAAY,CAACG,OAAO,CAACE,QAAQ,GAAG,EAAE,CAAC;IAC5D,IAAI6B,iBAAiB,GAAI,GAAEJ,OAAO,GAAG,EAAE,GAAI,IAAGA,OAAQ,EAAC,GAAGA,OAAQ,IAAGG,OAAO,GAAG,EAAE,GAAI,IAAGA,OAAQ,EAAC,GAAGA,OAAQ,EAAC;IAC7G1D,mBAAmB,CAAC2D,iBAAiB,CAAC;IAEtC,IAAIC,UAAU,GAAGJ,IAAI,CAACC,KAAK,CAAChC,YAAY,CAACG,OAAO,CAACC,WAAW,GAAG,EAAE,CAAC;IAClE,IAAIgC,UAAU,GAAGL,IAAI,CAACC,KAAK,CAAChC,YAAY,CAACG,OAAO,CAACC,WAAW,GAAG,EAAE,CAAC;IAClE,IAAIiC,aAAa,GAAI,GAAEF,UAAU,GAAG,EAAE,GAAI,IAAGA,UAAW,EAAC,GAAGA,UAAW,IAAGC,UAAU,GAAG,EAAE,GAAI,IAAGA,UAAW,EAAC,GAAGA,UAAW,EAAC;IAC3H3D,mBAAmB,CAAC4D,aAAa,CAAC;IAElC,MAAMC,QAAQ,GAAGC,QAAQ,CAAEvC,YAAY,CAACG,OAAO,CAACC,WAAW,GAAGJ,YAAY,CAACG,OAAO,CAACE,QAAQ,GAAI,GAAG,CAAC;IACnGpC,gBAAgB,CAACuE,KAAK,CAACF,QAAQ,CAAC,GAAG,CAAC,GAAGA,QAAQ,CAAC;EAClD,CAAC;EAED,MAAMG,QAAQ,GAAG,CAAC,4BAA4B,EAAE,4BAA4B,EAAE,4BAA4B,EAAE,4BAA4B,EAAE,4BAA4B,EAAE,4BAA4B,CAAC;EAErM,MAAMC,sBAAsB,GAAG,MAAM;IACnC,IAAIhE,UAAU,IAAI+D,QAAQ,CAAC/B,MAAM,GAAG,CAAC,EAAE;MACrC/B,aAAa,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM;MACLA,aAAa,CAAEgD,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAO,GAAG,EAAEjE,mBAAmB,CAACI,OAAQ;QAAC,GAAG,EAAEkC,YAAa;QAAC,OAAO,EAAE0B,cAAe;QAAC,YAAY,EAAEG;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9H;QAAO,GAAG,EAAEY,QAAQ,CAAC/D,UAAU,CAAE;QAAC,IAAI;QAAC,KAAK;QAAC,QAAQ;QAAC,SAAS,EAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAS,eAC1F;QAAK,SAAS,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAO,eACnC;QAAK,SAAS,EAAC,iBAAiB;QAAA,wBAC9B;UAAG,SAAS,EAAC,aAAa;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eAC3C;UAAG,SAAS,EAAC,iBAAiB;UAAA,UAAEhB,mBAAmB,CAACE;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAK,eACjE;UAAG,SAAS,EAAC,mBAAmB;UAAA,UAAEF,mBAAmB,CAACG;QAAU;UAAA;UAAA;UAAA;QAAA,QAAK,eACrE;UAAK,GAAG,EAAEH,mBAAmB,CAACK,UAAW;UAAC,SAAS,EAAEuC,WAAW,CAACC,gBAAgB,CAAE;UAAC,OAAO,EAAEE,YAAa;UAAC,GAAG,EAAC,aAAa;UAAC,EAAE,EAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAG,eAC/I;UAAK,SAAS,EAAC,eAAe;UAAA,wBAC5B;YAAG,SAAS,EAAC,kBAAkB;YAAA,UAAEjC;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAK,eACtD;YAAG,SAAS,EAAC,kBAAkB;YAAA,UAAEF;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAClD,eACN;UAAO,IAAI,EAAC,OAAO;UAAC,IAAI,EAAC,kBAAkB;UAAC,SAAS,EAAC,kBAAkB;UAAC,KAAK,EAAEN,aAAc;UAAC,QAAQ,EAAEiC;QAAuB;UAAA;UAAA;UAAA;QAAA,QAAG,eAEnI;UAAK,SAAS,EAAC,iBAAiB;UAAA,wBAC9B;YAAG,SAAS,EAAC,qCAAqC;YAAC,OAAO,EAAE2B;UAAe;YAAA;YAAA;YAAA;UAAA,QAAK,eAChF;YAAG,SAAS,EAAG,YAAW1D,cAAc,GAAG,iBAAiB,GAAG,gBAAiB,UAAU;YAAC,OAAO,EAAEyC;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAK,eACzH;YAAG,SAAS,EAAC,oCAAoC;YAAC,OAAO,EAAEe;UAAe;YAAA;YAAA;YAAA;UAAA,QAAK,eAC/E;YAAO,IAAI,EAAC,MAAM;YAAC,MAAM,EAAC,MAAM;YAAC,QAAQ,EAAE1C;UAAiB;YAAA;YAAA;YAAA;UAAA,QAAG,eAC/D;YAAQ,OAAO,EAAEI,gBAAiB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgB;QAAA;UAAA;UAAA;UAAA;QAAA,QAC9C,eAGN;UAAQ,OAAO,EAAE,MAAML,eAAe,CAAC,CAACD,YAAY,CAAE;UAAA,UACnDA,YAAY,GAAG,eAAe,GAAG;QAAe;UAAA;UAAA;UAAA;QAAA,QAC1C,EAGRA,YAAY,iBACX,QAAC,QAAQ;UACP,QAAQ,EAAEa,QAAS;UACnB,aAAa,EAAEtB,aAAc;UAC7B,YAAY,EAAE2B,YAAa;UAC3B,cAAc,EAAE9B,cAAe;UAC/B,YAAY,EAAEP;QAAuB;UAAA;UAAA;UAAA;QAAA,QAExC;MAAA;QAAA;QAAA;QAAA;MAAA,QACG,eACN;QAAK,SAAS,EAAC,eAAe;QAAC,OAAO,EAAE+E,sBAAuB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEzD;IAAA;MAAA;MAAA;MAAA;IAAA;EACF,iBACL;AAEP;AAAC,GApLQjF,GAAG;AAAA,KAAHA,GAAG;AAsLZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}