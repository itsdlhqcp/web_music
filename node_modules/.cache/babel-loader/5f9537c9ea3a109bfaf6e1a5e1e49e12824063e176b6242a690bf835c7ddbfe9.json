{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91859\\\\Advance-Music-Player-React-JS\\\\src\\\\Components\\\\Library\\\\LibraryListItem.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LibraryListItem(_ref) {\n  let {\n    song,\n    setSongState,\n    songState,\n    audioRef\n  } = _ref;\n  const changeCurrentSongHandler = () => {\n    // Your logic to change the current song\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: changeCurrentSongHandler,\n    className: `library__list-item ${song.id === songState.currentSong[0].id ? \"active-song\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: `Cover for ${song.title}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library__song-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = LibraryListItem;\nexport default LibraryListItem;\nvar _c;\n$RefreshReg$(_c, \"LibraryListItem\");","map":{"version":3,"names":["React","LibraryListItem","song","setSongState","songState","audioRef","changeCurrentSongHandler","id","currentSong","cover","title","artist"],"sources":["C:/Users/91859/Advance-Music-Player-React-JS/src/Components/Library/LibraryListItem.js"],"sourcesContent":["import React from \"react\";\n\nfunction LibraryListItem({ song, setSongState, songState, audioRef }) {\n    const changeCurrentSongHandler = () => {\n        // Your logic to change the current song\n    };\n\n    return (\n        <div\n            onClick={changeCurrentSongHandler}\n            className={`library__list-item ${\n                song.id === songState.currentSong[0].id ? \"active-song\" : \"\"\n            }`}\n        >\n            <img src={song.cover} alt={`Cover for ${song.title}`} />\n            <div className=\"library__song-column\">\n                <h3>{song.title}</h3>\n                <p>{song.artist}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default LibraryListItem;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,eAAe,OAA8C;EAAA,IAA7C;IAAEC,IAAI;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAS,CAAC;EAChE,MAAMC,wBAAwB,GAAG,MAAM;IACnC;EAAA,CACH;EAED,oBACI;IACI,OAAO,EAAEA,wBAAyB;IAClC,SAAS,EAAG,sBACRJ,IAAI,CAACK,EAAE,KAAKH,SAAS,CAACI,WAAW,CAAC,CAAC,CAAC,CAACD,EAAE,GAAG,aAAa,GAAG,EAC7D,EAAE;IAAA,wBAEH;MAAK,GAAG,EAAEL,IAAI,CAACO,KAAM;MAAC,GAAG,EAAG,aAAYP,IAAI,CAACQ,KAAM;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACxD;MAAK,SAAS,EAAC,sBAAsB;MAAA,wBACjC;QAAA,UAAKR,IAAI,CAACQ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACrB;QAAA,UAAIR,IAAI,CAACS;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAClB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,KAnBQV,eAAe;AAqBxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}