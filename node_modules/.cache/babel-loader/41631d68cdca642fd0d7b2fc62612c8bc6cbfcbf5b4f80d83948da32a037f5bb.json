{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91859\\\\Desktop\\\\web_music\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport { useRef, useState, useEffect } from 'react';\nimport Playlist from './PlayList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentMusicDetails, setCurrentMusicDetails] = useState({\n    songName: 'Inspired (Clean)',\n    songArtist: 'NEFFEX',\n    songSrc: './Assets/songs/Inspired (Clean) - NEFFEX.mp3',\n    songAvatar: './Assets/Images/image3.jpg'\n  });\n  const [nowPlaying, setNowPlaying] = useState({});\n  const [audioProgress, setAudioProgress] = useState(0);\n  const [isAudioPlaying, setIsAudioPlaying] = useState(false);\n  const [musicIndex, setMusicIndex] = useState(0);\n  const [musicTotalLength, setMusicTotalLength] = useState('04:38');\n  const [musicCurrentTime, setMusicCurrentTime] = useState('00:00');\n  const [videoIndex, setVideoIndex] = useState(0);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [showPlaylist, setShowPlaylist] = useState(false);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleFileUpload = () => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const audioSrc = reader.result;\n        const fileName = selectedFile.name;\n        const newPlaylist = [...playlist, {\n          songSrc: audioSrc,\n          songName: fileName\n        }];\n        setPlaylist(newPlaylist);\n        storePlaylistInStorage(newPlaylist);\n        setNowPlaying({\n          songName: fileName,\n          songArtist: 'Unknown',\n          songSrc: audioSrc,\n          songAvatar: './Assets/Images/image3.jpg'\n        });\n      };\n      reader.readAsDataURL(selectedFile);\n    } else {\n      alert('Please select a file to upload.');\n    }\n  };\n  const currentAudio = useRef();\n  const handleMusicProgressBar = e => {\n    setAudioProgress(e.target.value);\n    currentAudio.current.currentTime = e.target.value * currentAudio.current.duration / 100;\n  };\n  let avatarClass = ['objectFitCover', 'objectFitContain', 'none'];\n  const [avatarClassIndex, setAvatarClassIndex] = useState(0);\n  const handleAvatar = () => {\n    setAvatarClassIndex(prevIndex => (prevIndex + 1) % avatarClass.length);\n  };\n  const handleAudioPlay = () => {\n    if (currentAudio.current.paused) {\n      currentAudio.current.play();\n      setIsAudioPlaying(true);\n    } else {\n      currentAudio.current.pause();\n      setIsAudioPlaying(false);\n    }\n  };\n  const playlistKey = 'musicPlaylist';\n  const storePlaylistInStorage = playlist => {\n    localStorage.setItem(playlistKey, JSON.stringify(playlist));\n  };\n  const retrievePlaylistFromStorage = () => {\n    const storedPlaylist = localStorage.getItem(playlistKey);\n    return storedPlaylist ? JSON.parse(storedPlaylist) : [];\n  };\n  const [playlist, setPlaylist] = useState(() => retrievePlaylistFromStorage());\n  useEffect(() => {\n    if (playlist.length > 0) {\n      const savedIndex = localStorage.getItem('musicIndex');\n      const savedTime = localStorage.getItem('musicCurrentTime');\n      setMusicIndex(savedIndex ? parseInt(savedIndex) : 0);\n      const firstSong = playlist[savedIndex || 0];\n      currentAudio.current.src = firstSong.songSrc;\n      setCurrentMusicDetails({\n        songName: 'Unknown',\n        songArtist: 'Unknown',\n        songSrc: firstSong.songSrc,\n        songAvatar: './Assets/Images/image3.jpg'\n      });\n      setNowPlaying({\n        songName: firstSong.songName || 'Unknown',\n        songArtist: firstSong.songArtist || 'Unknown',\n        songSrc: firstSong.songSrc,\n        songAvatar: './Assets/Images/image3.jpg'\n      });\n      if (savedTime) {\n        currentAudio.current.currentTime = parseFloat(savedTime);\n      }\n      setIsAudioPlaying(true);\n    }\n  }, [playlist]);\n  useEffect(() => {\n    const savePlaybackData = () => {\n      localStorage.setItem('musicIndex', musicIndex);\n      localStorage.setItem('musicCurrentTime', currentAudio.current.currentTime);\n    };\n    const handleAudioUpdate = () => {\n      let minutes = Math.floor(currentAudio.current.duration / 60);\n      let seconds = Math.floor(currentAudio.current.duration % 60);\n      let musicTotalLength0 = `${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\n      setMusicTotalLength(musicTotalLength0);\n      let currentMin = Math.floor(currentAudio.current.currentTime / 60);\n      let currentSec = Math.floor(currentAudio.current.currentTime % 60);\n      let musicCurrentT = `${currentMin < 10 ? `0${currentMin}` : currentMin}:${currentSec < 10 ? `0${currentSec}` : currentSec}`;\n      setMusicCurrentTime(musicCurrentT);\n      const progress = parseInt(currentAudio.current.currentTime / currentAudio.current.duration * 100);\n      setAudioProgress(isNaN(progress) ? 0 : progress);\n      savePlaybackData();\n    };\n    currentAudio.current.addEventListener('timeupdate', handleAudioUpdate);\n    return () => {\n      currentAudio.current.removeEventListener('timeupdate', handleAudioUpdate);\n    };\n  }, [currentAudio]);\n  const vidArray = ['./Assets/Videos/video1.mp4', './Assets/Videos/video2.mp4', './Assets/Videos/video3.mp4', './Assets/Videos/video4.mp4', './Assets/Videos/video5.mp4', './Assets/Videos/video6.mp4'];\n  const handleChangeBackground = () => {\n    setVideoIndex(prevIndex => (prevIndex + 1) % vidArray.length);\n  };\n  const truncatedSongName = nowPlaying.songName ? nowPlaying.songName.substring(0, nowPlaying.songName.length - 4).substring(0, 24) : \"Let's goo song\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        src: currentMusicDetails.songSrc,\n        ref: currentAudio,\n        onEnded: handleNextSong,\n        onTimeUpdate: handleAudioUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        src: vidArray[videoIndex],\n        loop: true,\n        muted: true,\n        autoPlay: true,\n        className: \"backgroundVideo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blackScreen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-Container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"musicPlayer\",\n          children: \"Music Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"music-Head-Name\",\n          children: truncatedSongName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"music-Artist-Name\",\n          children: nowPlaying.songArtist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentMusicDetails.songAvatar,\n          className: avatarClass[avatarClassIndex],\n          onClick: handleAvatar,\n          alt: \"song Avatar\",\n          id: \"songAvatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"musicTimerDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"musicCurrentTime\",\n            children: musicCurrentTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"musicTotalLenght\",\n            children: musicTotalLength\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          name: \"musicProgressBar\",\n          className: \"musicProgressBar\",\n          value: audioProgress,\n          onChange: handleMusicProgressBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"musicControlers\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-backward musicControler\",\n            onClick: handlePrevSong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fa-solid ${isAudioPlaying ? 'fa-pause-circle' : 'fa-circle-play'} playBtn`,\n            onClick: handleAudioPlay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-forward musicControler\",\n            onClick: handleNextSong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".mp3\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFileUpload,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPlaylist(!showPlaylist),\n          children: showPlaylist ? 'Hide Playlist' : 'Show Playlist'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), showPlaylist && /*#__PURE__*/_jsxDEV(Playlist, {\n          playlist: playlist,\n          setMusicIndex: setMusicIndex,\n          currentAudio: currentAudio,\n          isAudioPlaying: isAudioPlaying,\n          setSongState: setCurrentMusicDetails,\n          showPlaylist: showPlaylist,\n          setShowPlaylist: setShowPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"changeBackBtn\",\n        onClick: handleChangeBackground,\n        children: \"Change Background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"Q3T1sbg9qyuyq1N8ojy+w6EMh9A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","useEffect","Playlist","App","currentMusicDetails","setCurrentMusicDetails","songName","songArtist","songSrc","songAvatar","nowPlaying","setNowPlaying","audioProgress","setAudioProgress","isAudioPlaying","setIsAudioPlaying","musicIndex","setMusicIndex","musicTotalLength","setMusicTotalLength","musicCurrentTime","setMusicCurrentTime","videoIndex","setVideoIndex","selectedFile","setSelectedFile","showPlaylist","setShowPlaylist","handleFileChange","e","target","files","handleFileUpload","reader","FileReader","onloadend","audioSrc","result","fileName","name","newPlaylist","playlist","setPlaylist","storePlaylistInStorage","readAsDataURL","alert","currentAudio","handleMusicProgressBar","value","current","currentTime","duration","avatarClass","avatarClassIndex","setAvatarClassIndex","handleAvatar","prevIndex","length","handleAudioPlay","paused","play","pause","playlistKey","localStorage","setItem","JSON","stringify","retrievePlaylistFromStorage","storedPlaylist","getItem","parse","savedIndex","savedTime","parseInt","firstSong","src","parseFloat","savePlaybackData","handleAudioUpdate","minutes","Math","floor","seconds","musicTotalLength0","currentMin","currentSec","musicCurrentT","progress","isNaN","addEventListener","removeEventListener","vidArray","handleChangeBackground","truncatedSongName","substring","handleNextSong","handlePrevSong"],"sources":["C:/Users/91859/Desktop/web_music/src/App.js"],"sourcesContent":["// App.js\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport Playlist from './PlayList';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [currentMusicDetails, setCurrentMusicDetails] = useState({\r\n    songName: 'Inspired (Clean)',\r\n    songArtist: 'NEFFEX',\r\n    songSrc: './Assets/songs/Inspired (Clean) - NEFFEX.mp3',\r\n    songAvatar: './Assets/Images/image3.jpg',\r\n  });\r\n\r\n  const [nowPlaying, setNowPlaying] = useState({});\r\n  const [audioProgress, setAudioProgress] = useState(0);\r\n  const [isAudioPlaying, setIsAudioPlaying] = useState(false);\r\n  const [musicIndex, setMusicIndex] = useState(0);\r\n  const [musicTotalLength, setMusicTotalLength] = useState('04:38');\r\n  const [musicCurrentTime, setMusicCurrentTime] = useState('00:00');\r\n  const [videoIndex, setVideoIndex] = useState(0);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [showPlaylist, setShowPlaylist] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const audioSrc = reader.result;\r\n        const fileName = selectedFile.name;\r\n        const newPlaylist = [...playlist, { songSrc: audioSrc, songName: fileName }];\r\n        setPlaylist(newPlaylist);\r\n        storePlaylistInStorage(newPlaylist);\r\n\r\n        setNowPlaying({ songName: fileName, songArtist: 'Unknown', songSrc: audioSrc, songAvatar: './Assets/Images/image3.jpg' });\r\n      };\r\n      reader.readAsDataURL(selectedFile);\r\n    } else {\r\n      alert('Please select a file to upload.');\r\n    }\r\n  };\r\n\r\n  const currentAudio = useRef();\r\n\r\n  const handleMusicProgressBar = (e) => {\r\n    setAudioProgress(e.target.value);\r\n    currentAudio.current.currentTime = (e.target.value * currentAudio.current.duration) / 100;\r\n  };\r\n\r\n  let avatarClass = ['objectFitCover', 'objectFitContain', 'none'];\r\n  const [avatarClassIndex, setAvatarClassIndex] = useState(0);\r\n\r\n  const handleAvatar = () => {\r\n    setAvatarClassIndex((prevIndex) => (prevIndex + 1) % avatarClass.length);\r\n  };\r\n\r\n  const handleAudioPlay = () => {\r\n    if (currentAudio.current.paused) {\r\n      currentAudio.current.play();\r\n      setIsAudioPlaying(true);\r\n    } else {\r\n      currentAudio.current.pause();\r\n      setIsAudioPlaying(false);\r\n    }\r\n  };\r\n\r\n  const playlistKey = 'musicPlaylist';\r\n\r\n  const storePlaylistInStorage = (playlist) => {\r\n    localStorage.setItem(playlistKey, JSON.stringify(playlist));\r\n  };\r\n\r\n  const retrievePlaylistFromStorage = () => {\r\n    const storedPlaylist = localStorage.getItem(playlistKey);\r\n    return storedPlaylist ? JSON.parse(storedPlaylist) : [];\r\n  };\r\n\r\n  const [playlist, setPlaylist] = useState(() => retrievePlaylistFromStorage());\r\n\r\n  useEffect(() => {\r\n    if (playlist.length > 0) {\r\n      const savedIndex = localStorage.getItem('musicIndex');\r\n      const savedTime = localStorage.getItem('musicCurrentTime');\r\n\r\n      setMusicIndex(savedIndex ? parseInt(savedIndex) : 0);\r\n\r\n      const firstSong = playlist[savedIndex || 0];\r\n      currentAudio.current.src = firstSong.songSrc;\r\n\r\n      setCurrentMusicDetails({\r\n        songName: 'Unknown',\r\n        songArtist: 'Unknown',\r\n        songSrc: firstSong.songSrc,\r\n        songAvatar: './Assets/Images/image3.jpg',\r\n      });\r\n\r\n      setNowPlaying({\r\n        songName: firstSong.songName || 'Unknown',\r\n        songArtist: firstSong.songArtist || 'Unknown',\r\n        songSrc: firstSong.songSrc,\r\n        songAvatar: './Assets/Images/image3.jpg',\r\n      });\r\n\r\n      if (savedTime) {\r\n        currentAudio.current.currentTime = parseFloat(savedTime);\r\n      }\r\n\r\n      setIsAudioPlaying(true);\r\n    }\r\n  }, [playlist]);\r\n\r\n  useEffect(() => {\r\n    const savePlaybackData = () => {\r\n      localStorage.setItem('musicIndex', musicIndex);\r\n      localStorage.setItem('musicCurrentTime', currentAudio.current.currentTime);\r\n    };\r\n\r\n    const handleAudioUpdate = () => {\r\n      let minutes = Math.floor(currentAudio.current.duration / 60);\r\n      let seconds = Math.floor(currentAudio.current.duration % 60);\r\n      let musicTotalLength0 = `${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\r\n      setMusicTotalLength(musicTotalLength0);\r\n\r\n      let currentMin = Math.floor(currentAudio.current.currentTime / 60);\r\n      let currentSec = Math.floor(currentAudio.current.currentTime % 60);\r\n      let musicCurrentT = `${currentMin < 10 ? `0${currentMin}` : currentMin}:${currentSec < 10 ? `0${currentSec}` : currentSec}`;\r\n      setMusicCurrentTime(musicCurrentT);\r\n\r\n      const progress = parseInt((currentAudio.current.currentTime / currentAudio.current.duration) * 100);\r\n      setAudioProgress(isNaN(progress) ? 0 : progress);\r\n\r\n      savePlaybackData();\r\n    };\r\n\r\n    currentAudio.current.addEventListener('timeupdate', handleAudioUpdate);\r\n\r\n    return () => {\r\n      currentAudio.current.removeEventListener('timeupdate', handleAudioUpdate);\r\n    };\r\n  }, [currentAudio]);\r\n\r\n  const vidArray = [\r\n    './Assets/Videos/video1.mp4',\r\n    './Assets/Videos/video2.mp4',\r\n    './Assets/Videos/video3.mp4',\r\n    './Assets/Videos/video4.mp4',\r\n    './Assets/Videos/video5.mp4',\r\n    './Assets/Videos/video6.mp4',\r\n  ];\r\n\r\n  const handleChangeBackground = () => {\r\n    setVideoIndex((prevIndex) => (prevIndex + 1) % vidArray.length);\r\n  };\r\n\r\n  const truncatedSongName = nowPlaying.songName\r\n    ? nowPlaying.songName.substring(0, nowPlaying.songName.length - 4).substring(0, 24)\r\n    : \"Let's goo song\";\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <audio src={currentMusicDetails.songSrc} ref={currentAudio} onEnded={handleNextSong} onTimeUpdate={handleAudioUpdate}></audio>\r\n        <video src={vidArray[videoIndex]} loop muted autoPlay className=\"backgroundVideo\"></video>\r\n        <div className=\"blackScreen\"></div>\r\n        <div className=\"music-Container\">\r\n          <p className=\"musicPlayer\">Music Player</p>\r\n          <p className=\"music-Head-Name\">{truncatedSongName}</p>\r\n          <p className=\"music-Artist-Name\">{nowPlaying.songArtist}</p>\r\n          <img\r\n            src={currentMusicDetails.songAvatar}\r\n            className={avatarClass[avatarClassIndex]}\r\n            onClick={handleAvatar}\r\n            alt=\"song Avatar\"\r\n            id=\"songAvatar\"\r\n          />\r\n          <div className=\"musicTimerDiv\">\r\n            <p className=\"musicCurrentTime\">{musicCurrentTime}</p>\r\n            <p className=\"musicTotalLenght\">{musicTotalLength}</p>\r\n          </div>\r\n          <input type=\"range\" name=\"musicProgressBar\" className=\"musicProgressBar\" value={audioProgress} onChange={handleMusicProgressBar} />\r\n\r\n          <div className=\"musicControlers\">\r\n            <i className=\"fa-solid fa-backward musicControler\" onClick={handlePrevSong}></i>\r\n            <i className={`fa-solid ${isAudioPlaying ? 'fa-pause-circle' : 'fa-circle-play'} playBtn`} onClick={handleAudioPlay}></i>\r\n            <i className=\"fa-solid fa-forward musicControler\" onClick={handleNextSong}></i>\r\n            <input type=\"file\" accept=\".mp3\" onChange={handleFileChange} />\r\n            <button onClick={handleFileUpload}>Upload</button>\r\n          </div>\r\n\r\n          <button onClick={() => setShowPlaylist(!showPlaylist)}>{showPlaylist ? 'Hide Playlist' : 'Show Playlist'}</button>\r\n\r\n          {showPlaylist && (\r\n            <Playlist\r\n              playlist={playlist}\r\n              setMusicIndex={setMusicIndex}\r\n              currentAudio={currentAudio}\r\n              isAudioPlaying={isAudioPlaying}\r\n              setSongState={setCurrentMusicDetails}\r\n              showPlaylist={showPlaylist}\r\n              setShowPlaylist={setShowPlaylist}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"changeBackBtn\" onClick={handleChangeBackground}>\r\n          Change Background\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}